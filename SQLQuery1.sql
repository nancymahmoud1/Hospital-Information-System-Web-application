-- Create Patient table
CREATE TABLE IF NOT EXISTS Patient (
    p_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    fname VARCHAR(20),
    lname VARCHAR(20),
    email VARCHAR(50),
    password VARCHAR(50),
    address VARCHAR(50),
    phoneNumber VARCHAR(13),
    job VARCHAR(20) DEFAULT 'patient',
    ward_id INT,
    photo VARCHAR(255) -- Added photo column
);

-- Create Ward table
CREATE TABLE IF NOT EXISTS ward (
    w_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    w_name VARCHAR(50),
    n_num INT
);

-- Create Doctor table
CREATE TABLE IF NOT EXISTS doctor (
    doc_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    fname VARCHAR(20),
    lname VARCHAR(20),
    email VARCHAR(50),
    password VARCHAR(50),
    address VARCHAR(50),
    phoneNumber VARCHAR(13),
    job VARCHAR(20) DEFAULT 'doctor',
    specialization VARCHAR(20),
    photo VARCHAR(255), -- Added photo column
    brief VARCHAR(255) -- Added brief column
);

-- Create Nurse table
CREATE TABLE IF NOT EXISTS nurse (
    number INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    fname VARCHAR(20),
    lname VARCHAR(20),
    email VARCHAR(50),
    password VARCHAR(50),
    address VARCHAR(50),
    phoneNumber VARCHAR(13),
    job VARCHAR(20) DEFAULT 'nurse',
    ward_id INT,
    photo VARCHAR(255) -- Added photo column
);

-- Create Drug table
CREATE TABLE IF NOT EXISTS drug (
    code INT PRIMARY KEY,
    dosage VARCHAR(20),
    brand VARCHAR(20)
);

-- Create Appointments table
CREATE TABLE IF NOT EXISTS appointments (
    id SERIAL PRIMARY KEY,
    p_id INT,
    doc_id INT,
    appointment_date DATE,
    appointment_time TIME,
    FOREIGN KEY (p_id) REFERENCES Patient(p_id),
    FOREIGN KEY (doc_id) REFERENCES doctor(doc_id)
);

-- Create Gives table
CREATE TABLE IF NOT EXISTS gives (
    p_id INT,
    d_code INT,
    n_num INT,
    dosage VARCHAR(20),
    date DATE,
    time TIME,
    PRIMARY KEY (p_id, d_code, n_num),
    FOREIGN KEY (p_id) REFERENCES Patient(p_id),
    FOREIGN KEY (d_code) REFERENCES drug(code),
    FOREIGN KEY (n_num) REFERENCES nurse(number)
);

-- Create Lab Results table
CREATE TABLE IF NOT EXISTS lab_results (
    P_ID INT,
    lab_ID INT,
    testName VARCHAR(50),
    testResult VARCHAR(10),
    testDate DATE,
    PRIMARY KEY (P_ID, lab_ID),
    FOREIGN KEY (P_ID) REFERENCES Patient(p_id)
);

-- Create Prescriptions table
CREATE TABLE IF NOT EXISTS prescriptions (
    id SERIAL PRIMARY KEY,
    p_id INT NOT NULL,
    doc_id INT NOT NULL,
    n_id INT NOT NULL,
    patient_name VARCHAR(255) NOT NULL,
    drug VARCHAR(255) NOT NULL,
    dosage VARCHAR(255) NOT NULL,
    FOREIGN KEY (p_id) REFERENCES Patient(p_id),
    FOREIGN KEY (doc_id) REFERENCES doctor(doc_id),
    FOREIGN KEY (n_id) REFERENCES nurse(number)
);

-- Create Reviews table
CREATE TABLE IF NOT EXISTS reviews (
    id SERIAL PRIMARY KEY,
    p_id INT NOT NULL,
    doc_id INT NOT NULL,
    rating INT NOT NULL,
    review TEXT NOT NULL,
    patient_name VARCHAR(50) DEFAULT '',
    doc_name VARCHAR(50) DEFAULT '',
    FOREIGN KEY (p_id) REFERENCES Patient(p_id),
    FOREIGN KEY (doc_id) REFERENCES doctor(doc_id)
);

-- Add foreign key constraints
ALTER TABLE Patient
    ADD FOREIGN KEY (ward_id) REFERENCES ward(w_id);

ALTER TABLE ward
    ADD FOREIGN KEY (n_num) REFERENCES nurse(number);

ALTER TABLE nurse
    ADD FOREIGN KEY (ward_id) REFERENCES ward(w_id);

-- Alter tables to add photo column
ALTER TABLE doctor ADD COLUMN IF NOT EXISTS photo VARCHAR(255);
ALTER TABLE nurse ADD COLUMN IF NOT EXISTS photo VARCHAR(255);
ALTER TABLE patient ADD COLUMN IF NOT EXISTS photo VARCHAR(255);

-- Alter table to add brief column
ALTER TABLE doctor ADD COLUMN IF NOT EXISTS brief VARCHAR(255);

-- Change phoneNumber column data type to VARCHAR and add a CHECK constraint
ALTER TABLE Patient
    DROP CONSTRAINT IF EXISTS valid_phone,
    ADD CONSTRAINT valid_phone CHECK (phoneNumber ~ '^[0-9+()-]*$');

ALTER TABLE doctor
    DROP CONSTRAINT IF EXISTS valid_phone_doctor,
    ADD CONSTRAINT valid_phone_doctor CHECK (phoneNumber ~ '^[0-9+()-]*$');

ALTER TABLE nurse
    DROP CONSTRAINT IF EXISTS valid_phone_nurse,
    ADD CONSTRAINT valid_phone_nurse CHECK (phoneNumber ~ '^[0-9+()-]*$');

-- Alter reviews table to add patient_name and doc_name columns if they don't already exist
DO $$ BEGIN
    ALTER TABLE reviews ADD COLUMN IF NOT EXISTS patient_name VARCHAR(50);
    EXCEPTION WHEN duplicate_column THEN RAISE NOTICE 'column patient_name already exists in reviews.';
END $$;

DO $$ BEGIN
    ALTER TABLE reviews ADD COLUMN IF NOT EXISTS doc_name VARCHAR(50);
    EXCEPTION WHEN duplicate_column THEN RAISE NOTICE 'column doc_name already exists in reviews.';
END $$;
